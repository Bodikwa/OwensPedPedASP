@model OwensPedPed.DAL.Models.Provence

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Provence</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="ProvenceId" />
            <div class="form-group">
                <label asp-for="ProvenceName" class="control-label"></label>
                <input asp-for="ProvenceName" class="form-control" />
                <span asp-validation-for="ProvenceName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountryId" class="control-label"></label>
                <select asp-for="CountryId" class="form-control" asp-items="ViewBag.CountryId"></select>
                <span asp-validation-for="CountryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false&libraries=places&key=AIzaSyCUqE3EyGYZe75yUrYJdS2M4j868WUU350"></script>
    <script type="text/javascript">
    google.maps.event.addDomListener(window, 'load', function () {
        var options = {
            componentRestrictions: { country: "za" }
        };
        var input = document.getElementById('PlaceName');
        var places = new google.maps.places.Autocomplete(input, options);
    });
    </script>

}
